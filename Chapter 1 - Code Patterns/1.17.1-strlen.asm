; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	A:\RE4B\Chapter 1 - Code Patterns\1.17.1-strlen.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2645	DB	'Something', 00H
	ORG $+2
$SG2646	DB	'strlen_function(''Something'') = %d', 0aH, 00H
_DATA	ENDS
PUBLIC	_strlen_function
; Function compile flags: /Odtp
_TEXT	SEGMENT
_eos$ = -4						; size = 4
_str$ = 8						; size = 4
_strlen_function PROC
; File a:\re4b\chapter 1 - code patterns\1.17.1-strlen.c
; Line 4
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 5
	mov	eax, DWORD PTR _str$[ebp]
	mov	DWORD PTR _eos$[ebp], eax
$LN2@strlen_fun:
; Line 6
	mov	ecx, DWORD PTR _eos$[ebp]
	movsx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _eos$[ebp]
	add	eax, 1
	mov	DWORD PTR _eos$[ebp], eax
	test	edx, edx
	je	SHORT $LN1@strlen_fun
	jmp	SHORT $LN2@strlen_fun
$LN1@strlen_fun:
; Line 7
	mov	eax, DWORD PTR _eos$[ebp]
	sub	eax, DWORD PTR _str$[ebp]
	sub	eax, 1
; Line 8
	mov	esp, ebp
	pop	ebp
	ret	0
_strlen_function ENDP
_TEXT	ENDS
PUBLIC	_main
EXTRN	_printf:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_main	PROC
; Line 11
	push	ebp
	mov	ebp, esp
; Line 12
	push	OFFSET $SG2645
	call	_strlen_function
	add	esp, 4
	push	eax
	push	OFFSET $SG2646
	call	_printf
	add	esp, 8
; Line 13
	xor	eax, eax
; Line 14
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
