; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	A:\RE4B\Chapter 1 - Code Patterns\1.14.4-min-max.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2653	DB	'Min Max: ', 0aH, 00H
	ORG $+1
$SG2654	DB	'max_function(8,16) = %d', 0aH, 00H
	ORG $+3
$SG2655	DB	'min_function(16,8) = %d', 0aH, 00H
_DATA	ENDS
PUBLIC	_max_function
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_max_function PROC
; File a:\re4b\chapter 1 - code patterns\1.14.4-min-max.c
; Line 4
	push	ebp
	mov	ebp, esp
; Line 5
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jle	SHORT $LN2@max_functi
; Line 6
	mov	eax, DWORD PTR _a$[ebp]
	jmp	SHORT $LN3@max_functi
; Line 7
	jmp	SHORT $LN3@max_functi
$LN2@max_functi:
; Line 8
	mov	eax, DWORD PTR _b$[ebp]
$LN3@max_functi:
; Line 10
	pop	ebp
	ret	0
_max_function ENDP
_TEXT	ENDS
PUBLIC	_min_function
; Function compile flags: /Odtp
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_min_function PROC
; Line 12
	push	ebp
	mov	ebp, esp
; Line 13
	mov	eax, DWORD PTR _a$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jge	SHORT $LN2@min_functi
; Line 14
	mov	eax, DWORD PTR _a$[ebp]
	jmp	SHORT $LN3@min_functi
; Line 15
	jmp	SHORT $LN3@min_functi
$LN2@min_functi:
; Line 16
	mov	eax, DWORD PTR _b$[ebp]
$LN3@min_functi:
; Line 18
	pop	ebp
	ret	0
_min_function ENDP
_TEXT	ENDS
PUBLIC	_main
EXTRN	_printf:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_main	PROC
; Line 21
	push	ebp
	mov	ebp, esp
; Line 22
	push	OFFSET $SG2653
	call	_printf
	add	esp, 4
; Line 23
	push	16					; 00000010H
	push	8
	call	_max_function
	add	esp, 8
	push	eax
	push	OFFSET $SG2654
	call	_printf
	add	esp, 8
; Line 24
	push	16					; 00000010H
	push	8
	call	_min_function
	add	esp, 8
	push	eax
	push	OFFSET $SG2655
	call	_printf
	add	esp, 8
; Line 26
	xor	eax, eax
; Line 27
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
