; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	A:\RE4B\Chapter 1 - Code Patterns\1.20.1-array.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2642	DB	'a[%d] = %d', 0aH, 00H
_DATA	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	_printf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -28						; size = 4
_a$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_main	PROC
; File a:\re4b\chapter 1 - code patterns\1.20.1-array.c
; Line 4
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 5
	mov	DWORD PTR _a$[ebp], 15			; 0000000fH
	mov	DWORD PTR _a$[ebp+4], 30		; 0000001eH
	mov	DWORD PTR _a$[ebp+8], 80		; 00000050H
	mov	DWORD PTR _a$[ebp+12], 22		; 00000016H
	mov	DWORD PTR _a$[ebp+16], 3
; Line 8
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@main
$LN2@main:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@main:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN1@main
; Line 9
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _a$[ebp+ecx*4]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	OFFSET $SG2642
	call	_printf
	add	esp, 12					; 0000000cH
; Line 10
	jmp	SHORT $LN2@main
$LN1@main:
; Line 12
	xor	eax, eax
; Line 13
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
