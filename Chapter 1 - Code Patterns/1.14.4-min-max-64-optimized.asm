; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	A:\RE4B\Chapter 1 - Code Patterns\1.14.4-min-max-64.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG2738	DB	'Min Max: ', 0aH, 00H
	ORG $+1
$SG2739	DB	'max_function(8,16) = %d', 0aH, 00H
	ORG $+3
$SG2740	DB	'min_function(16,8) = %d', 0aH, 00H
_DATA	ENDS
PUBLIC	_max_function
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
_max_function PROC
; File a:\re4b\chapter 1 - code patterns\1.14.4-min-max-64.c
; Line 7
	mov	ecx, DWORD PTR _a$[esp]
	mov	edx, DWORD PTR _b$[esp]
	push	esi
	mov	esi, DWORD PTR _b$[esp]
	cmp	ecx, edx
	jl	SHORT $LN2@max_functi
	mov	eax, DWORD PTR _a$[esp]
	jg	SHORT $LN5@max_functi
	cmp	eax, esi
	jbe	SHORT $LN2@max_functi
$LN5@max_functi:
; Line 8
	mov	edx, ecx
	pop	esi
; Line 12
	ret	0
$LN2@max_functi:
; Line 10
	mov	eax, esi
	pop	esi
; Line 12
	ret	0
_max_function ENDP
_TEXT	ENDS
PUBLIC	_min_function
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
_min_function PROC
; Line 15
	mov	ecx, DWORD PTR _a$[esp]
	mov	edx, DWORD PTR _b$[esp]
	push	esi
	mov	esi, DWORD PTR _b$[esp]
	cmp	ecx, edx
	jg	SHORT $LN2@min_functi
	mov	eax, DWORD PTR _a$[esp]
	jl	SHORT $LN5@min_functi
	cmp	eax, esi
	jae	SHORT $LN2@min_functi
$LN5@min_functi:
; Line 16
	mov	edx, ecx
	pop	esi
; Line 20
	ret	0
$LN2@min_functi:
; Line 18
	mov	eax, esi
	pop	esi
; Line 20
	ret	0
_min_function ENDP
_TEXT	ENDS
PUBLIC	_main
EXTRN	_printf:PROC
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_main	PROC
; Line 24
	push	OFFSET $SG2738
	call	_printf
; Line 25
	push	0
	push	16					; 00000010H
	push	OFFSET $SG2739
	call	_printf
; Line 26
	push	0
	push	8
	push	OFFSET $SG2740
	call	_printf
	add	esp, 28					; 0000001cH
; Line 28
	xor	eax, eax
; Line 29
	ret	0
_main	ENDP
_TEXT	ENDS
END
